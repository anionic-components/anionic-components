/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface AnionChipBar {
    'addChip': (chipText: string) => Promise<void>;
    'chipColor': string;
    'clearChips': () => Promise<void>;
    'getChips': () => Promise<string[]>;
    'removeChip': (chipText: string) => Promise<void>;
    'setChips': (chips: string[]) => Promise<void>;
  }
  interface AnionChipBarAttributes extends StencilHTMLAttributes {
    'chipColor'?: string;
    'onAnionChipRemoved'?: (event: CustomEvent) => void;
  }

  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface MyComponentAttributes extends StencilHTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AnionChipBar': Components.AnionChipBar;
    'MyComponent': Components.MyComponent;
  }

  interface StencilIntrinsicElements {
    'anion-chip-bar': Components.AnionChipBarAttributes;
    'my-component': Components.MyComponentAttributes;
  }


  interface HTMLAnionChipBarElement extends Components.AnionChipBar, HTMLStencilElement {}
  var HTMLAnionChipBarElement: {
    prototype: HTMLAnionChipBarElement;
    new (): HTMLAnionChipBarElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLElementTagNameMap {
    'anion-chip-bar': HTMLAnionChipBarElement
    'my-component': HTMLMyComponentElement
  }

  interface ElementTagNameMap {
    'anion-chip-bar': HTMLAnionChipBarElement;
    'my-component': HTMLMyComponentElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
